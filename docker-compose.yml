version: '3'
services:
  mysqldb:
   container_name: mysqldb
   image: mysql
   ports:
    - "3306:3306"
   environment:
    MYSQL_ROOT_PASSWORD: root
    MYSQL_DATABASE: openeye
    #MYSQL_USER: root
    #MYSQL_PASSWORD: root
   volumes:
      - ./data:/var/lib/mysql
   networks:
      - springboot-mysql-net
      - springboot-net

  openeyeconfigserver:
    container_name: openeyeconfigserver
    build:
      context: ./config-serever/OpenEyeConfigServer/
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    depends_on:
      openeyeserviceregistry:
        condition: service_started
    environment:
      - eureka.client.service-url.defaultZone=http://openeyeserviceregistry:8761/eureka/
      - eureka.client.enabled=true
      - eureka.host=openeyeserviceregistry
      - eureka.instance.preferIpAddress=false
      - eureka.instance.hostname=localhost
     
    networks:
      - springboot-mysql-net
      - springboot-net
    restart: on-failure

  openeyeserviceregistry:
    container_name: openeyeserviceregistry
    build:
      context: ./ServiceRegistry/OpenEyeServiceRegistry/
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - springboot-net
    restart: on-failure

  openeyeemployeeservice:
    container_name: openeyeemployeeservice
    build:
      context: ./EmployeeService/OpenEyeEmployeeSevice/
      dockerfile: Dockerfile
    ports:
      - "9091:9091"
    depends_on:
      mysqldb:
        condition: service_started
      openeyeserviceregistry:
        condition: service_started
    environment:
      - spring.datasource.url=jdbc:mysql://mysqldb/openeye?createDatabaseIfNotExist=true
      - spring.datasource.username=root
      - spring.datasource.password=root
      - eureka.client.service-url.defaultZone=http://openeyeserviceregistry:8761/eureka/
      - eureka.client.enabled=true
      - eureka.host=openeyeserviceregistry
      - eureka.instance.preferIpAddress=false
      - eureka.instance.hostname=localhost
     
    networks:
      - springboot-mysql-net
      - springboot-net
    restart: on-failure

  openeyeimageservice:
    container_name: openeyeimageservice
    build:
      context: ./ImageService/OpenEyeImageService/
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - eureka.client.service-url.defaultZone=http://openeyeserviceregistry:8761/eureka/
      - eureka.client.enabled=true
      - eureka.host=openeyeserviceregistry
      - eureka.instance.preferIpAddress=false
      - eureka.instance.hostname=localhost

    depends_on:
      openeyeserviceregistry:
        condition: service_started
    networks:
      - springboot-net
    restart: on-failure
    
  openeyeimageservice2:
    container_name: openeyeimageservice2
    build:
      context: ./ImageService/OpenEyeImageService/
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      - eureka.client.service-url.defaultZone=http://openeyeserviceregistry:8761/eureka/
      - eureka.client.enabled=true
      - eureka.host=openeyeserviceregistry
      - eureka.instance.preferIpAddress=false
      - eureka.instance.hostname=localhost

    depends_on:
      openeyeserviceregistry:
        condition: service_started
    networks:
      - springboot-net
    restart: on-failure

  openeyeattendanceservice:
    container_name: openeyeattendanceservice
    build:
      context: ./AttendanceService/OpeneyEyeAttendanceService/
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - spring.datasource.url=jdbc:mysql://mysqldb/openeye?createDatabaseIfNotExist=true
      - spring.datasource.username=root
      - spring.datasource.password=root
      - eureka.client.service-url.defaultZone=http://openeyeserviceregistry:8761/eureka/
      - eureka.client.enabled=true
      - eureka.host=openeyeserviceregistry
      - eureka.instance.preferIpAddress=false
      - eureka.instance.hostname=localhost
    
    depends_on:
      mysqldb:
        condition: service_started
      openeyeserviceregistry:
        condition: service_started 
    networks:
      - springboot-net
    restart: on-failure
   
  openeyeservicegateway:
    container_name: openeyeservicegateway
    build:
      context: ./ServiceGateWay/openeyeservicegateway/
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      eureka.client.service-url.defaultZone: http://openeyeserviceregistry:8761/eureka/
      eureka.client.enabled: true
      eureka.host: openeyeserviceregistry
      eureka.instance.preferIpAddress: true
      eureka.instance.hostname: localhost
      SPRING_CLOUD_GATEWAY_ROUTES[0]_URI: http://openeyeattendanceservice:8082
      SPRING_CLOUD_GATEWAY_ROUTES[0]_ID: ATTENDANCE-SERVICE
      SPRING_CLOUD_GATEWAY_ROUTES[0]_PREDICATES[0]: Path= /attendance/*
  
      SPRING_CLOUD_GATEWAY_ROUTES[1]_URI: http://openeyeemployeeservice:9091
      SPRING_CLOUD_GATEWAY_ROUTES[1]_ID: EMPLOYEE-SERVICE
      SPRING_CLOUD_GATEWAY_ROUTES[1]_PREDICATES[0]: Path= /employee/*

      SPRING_CLOUD_GATEWAY_ROUTES[2]_URI: http://openeyeimageservice:8083
      SPRING_CLOUD_GATEWAY_ROUTES[2]_ID: IMAGE-SERVICE
      SPRING_CLOUD_GATEWAY_ROUTES[2]_PREDICATES[0]: Path= /images/*

    depends_on:
      openeyeserviceregistry:
        condition: service_started
    networks:
      - springboot-net
    restart: on-failure    


networks:
  springboot-net:
    name: springboot-net
    driver: bridge
    external: true
  springboot-mysql-net: